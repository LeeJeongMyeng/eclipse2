# 객체의 지식 계열화
1.OOP개념
2. 객체 메모리 구조
3. 컴파일 과정
-main()없는 클래스
	클래스 ==>@@@.class
-main()있는 클래스
ㅋ	클래스==> @@@.class==>실행(메모리로딩)
4. 클래스와 객체의 차이점
	- 클래스 : 코드 설계, 도면
	- 객체 : 클래스를 main()을 통해 실제 메모리에 로딩한 내용
	
5. 객체의 구성요소에 대한 이해
	1) 필드 : 객체가 사용하는 데이터 유형 저장
	2)생성자 : 처음 클래스로부터 생성할 때, 필드를 초기화해주는 기능을 가진 함수
	  	클래스명과 통일 new Person("홍길동");
	3)메서드 : 필드와 상호관계를 가지면서 기능을 처리해주는 함수
		-매개변수(overloading)
		- 리턴유형
		-프로세스 처리
		-실제리턴값처리
		-위 구성요소의 혼합예제
	4)객체의 구성 요소의 연계된 혼합예제
		필드 값으로 저장할 데이터를 선언하고 , 생성자를 통해서필드를 토기화하고
		각종 기능을 메서드를 통해서 처리
===========================================================================	
6. 접근제어자의 필요성과 사용방법
1) public, default, protected, private
7.static의 개념 이해와 활용
8. 객체vs객체 관계
   1:1
   1:다
9. 상속개념이해
	1) 재사용을 위한 상속
	2)재정의 처리(overriding)
	3)추상클래스에 대한 이해와 활용
	4) interface사용
10. 패턴 자바